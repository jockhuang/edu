<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<display-name>book</display-name>
	<servlet>
		<servlet-name>spring</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
				classpath:spring-servlet.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>spring</servlet-name>
		<url-pattern>*.action</url-pattern>
	</servlet-mapping>
	
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>  
	       <param-name>forceEncoding</param-name>  
	       <param-value>true</param-value>  
        </init-param>  
	</filter>
	
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*</url-pattern>
	</filter-mapping>
	<filter>
	    <filter-name>sitemesh</filter-name>
	    <filter-class>
	        com.opensymphony.module.sitemesh.filter.PageFilter
	    </filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>sitemesh</filter-name>
	    <url-pattern>*</url-pattern>
	</filter-mapping>
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	
	<filter>
		<filter-name>SSOFilter</filter-name>
		<filter-class>
			com.whty.aam.client.authentication.AuthenticationFilter
		</filter-class>
		<init-param>
			<param-name>casServerLoginUrl</param-name>
			<param-value>
			<!--此处配置用户登录的地址  portal的地址-->
				http://n.eduyun.cn/index.php?r=portal/user/login
			</param-value>
			<!--这里的server是服务端的IP-->
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://eduyun.chineseall.cn/</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>SSOFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>

	<!--  以下配置的过滤器负责对Ticket的校验工作，必须启用它 -->
	<filter>
		<filter-name>vlidationFilter</filter-name>
		<filter-class>
			com.whty.aam.client.validation.Cas20ProxyReceivingTicketValidationFilter
		</filter-class>
		<init-param>
			<param-name>casServerUrlPrefix</param-name>
		<!--此处配置url地址是AAM服务器地址，如：http://ip:port/aam/ticketValidate 该地址用来对ticet的验证-->	
		<param-value>http://ticket.eduyun.cn:10000/aam/ticketValidate</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://eduyun.chineseall.cn/</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>vlidationFilter</filter-name>
		<url-pattern>*</url-pattern>
	</filter-mapping>
	
	<!--
		该过滤器负责实现HttpServletRequest请求的包裹，
		比如允许开发者通过HttpServletRequest的getRemoteUser()方法获得SSO登录用户的登录名，可选配置。
	-->
	<filter>
		<filter-name>httpServletRequestWrapperFilter</filter-name>
		<filter-class>
			com.whty.aam.client.util.HttpServletRequestWrapperFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>httpServletRequestWrapperFilter</filter-name>
		<url-pattern>*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>AssertionThreadLocalFilter</filter-name>
		<filter-class>
			com.whty.aam.client.util.AssertionThreadLocalFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>AssertionThreadLocalFilter</filter-name>
		<url-pattern>*</url-pattern>
	</filter-mapping>
	<!-- 用于单点退出配置，通知其他应用单点登出-->
	<listener>
		<listener-class>
		com.whty.aam.client.session.SingleSignOutHttpSessionListener
		</listener-class>
	</listener>
	<!-- 该过滤器用于实现单点登出功能，可选配置。 -->
	<filter>
		<filter-name> SingleSignOutFilter</filter-name>
		<filter-class>
			com.whty.aam.client.session.SingleSignOutFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>SingleSignOutFilter</filter-name>
		<url-pattern>*</url-pattern>
	</filter-mapping>
	<!--  -->
	<servlet>
		<servlet-name>callBackUrl</servlet-name>
		<servlet-class>cn.chineseall.book.controller.APIPaymentController</servlet-class>
		<load-on-startup>3</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>callBackUrl</servlet-name>
		<url-pattern>
	      /eduyun/payment/sycronizeNotify.do
	    </url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>notifyUrl</servlet-name>
		<servlet-class>cn.chineseall.book.controller.NotifyPaymentController</servlet-class>
		<load-on-startup>3</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>notifyUrl</servlet-name>
		<url-pattern>
	      /eduyun/payment/asycronizeNotify.do
	    </url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>getbooklistbyname</servlet-name>
		<servlet-class>cn.chineseall.book.controller.zt.EduYunController</servlet-class>
		<load-on-startup>3</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>getbooklistbyname</servlet-name>
		<url-pattern>
	      /zt/getBookListByName.do
	    </url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>getreadinfo</servlet-name>
		<servlet-class>cn.chineseall.book.controller.zt.ReadingInfoController</servlet-class>
		<load-on-startup>3</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>getreadinfo</servlet-name>
		<url-pattern>
	      /zt/getReadInfo.do
	    </url-pattern>
	</servlet-mapping>
	<!-- fckEditor -->
	<servlet>
		<servlet-name>Connector</servlet-name>
		<servlet-class>net.fckeditor.connector.ConnectorServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>Connector</servlet-name>
		<url-pattern>
	      /fckeditor/editor/filemanager/connectors/*
	    </url-pattern>
	</servlet-mapping>
	<error-page>
	  <error-code>404</error-code>
	  <location>/404.html</location>
	 </error-page>
	<jsp-config>
		<taglib>
			<taglib-uri>/FCKeditor.tld</taglib-uri>
			<taglib-location>/WEB-INF/FCKeditor.tld</taglib-location>
		</taglib>
	</jsp-config>
</web-app>